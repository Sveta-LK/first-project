GIT

ls -la .ssh/ - проверка наличия SSH-ключа
ls -a ~/.ssh - проверка ключа
ls -la ~/.ssh - также проверка наличия ключа, эта команда покажет содержимое папки .ssh в виде списка файлов.
ssh-keygen  - для генерации SSH-пары
ssh-keygen -t ed25519 -C "электронная почта, к которой привязан ваш аккаунт на GitHub"  - генерация ключа
или
ssh-keygen -t rsa -b 4096 -C "электронная почта, к которой привязан ваш аккаунт на GitHub"  - генерация ключа
Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter] - место для хранения ключа (по умолчанию домашний каталог пользователя)
pbcopy < ~/.ssh/id_ed25519.pub - скопировать содержимое ключа в буфер обмена
git remote add - привязать удалённый репозиторий к локальному
git remote -v - убедиться, что репозитории связаны
git push - отправить изменения на удалённый репозиторий
git push -u origin main - впервые отправить изменения на удалённый репозиторий, в дальнейшем просто git push
README.md — текстовый файл, который можно создать командой touch
git log  --oneline - (англ. «одной строкой»), получить сокращенный лог
untracked (англ. «неотслеживаемый»), Git «видит», что такой файл существует, но не следит за изменениями в нём, 
staged (англ. «подготовленный»)
tracked (англ. «отслеживаемый») в него попадают файлы, которые уже были зафиксированы с помощью git commit, а также файлы, которые были добавлены в staging area командой git add
modified (англ. «изменённый») означает, что Git сравнил содержимое файла с последней сохранённой версией и нашёл отличия. Например, файл был закоммичен и после этого изменён.




действия чтобы добавить на хаб:
на консоле создаем файл - (touch task.txt)
подготавливаем для сохранения - git add task.txt
коммитим (сохраняем) - git commit -m "внесен текст: тест 123"
добавляем на хаб - git push

